const Markup = require("node-vk-bot-api/lib/markup");
const MenuOption = require("../menu-option");
const CoinFinances = require("./../../coin-finances");
const coinFinances = new CoinFinances(null);
const settings = require("./../../config"); // get from context

class WithdrawCoinOption extends MenuOption {
  async chatMessage(botCtx) {
    const account = await this.ctx.findOrCreateAccount(botCtx);
    const accountBalance = account.coinAmountInCoin();

    if (accountBalance === 0) {
      return "üí∂ –í–∞—à –±–∞–ª–∞–Ω—Å —Ä–∞–≤–µ–Ω 0 VK Coins.";
    } else {
      const feedbackUrl = settings.get("shared.feedback_url");
      const isWithdrawSucceeded = await coinFinances.withdrawCoin(account);

      if (isWithdrawSucceeded) {
        return `
        ‚úî –ú—ã –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ –≤–∞–º ${accountBalance} VK Coins!

        üìà –û—Å—Ç–∞–≤—å—Ç–µ —Å–≤–æ–π –æ—Ç–∑—ã–≤: ${feedbackUrl}
        `;
      } else {
        return `
        ‚ùó –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–≤–æ–¥–µ —Å—Ä–µ–¥—Å—Ç–≤, —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º.
        `;
      }
    }
  }

  get buttonMarkup() {
    return Markup.button("üì§ –í—ã–≤–µ—Å—Ç–∏ VK Coin", "negative", {
      button: this.triggerButton
    });
  }

  get triggerButton() {
    return "withdraw_coin_button";
  }
}

module.exports = WithdrawCoinOption;
