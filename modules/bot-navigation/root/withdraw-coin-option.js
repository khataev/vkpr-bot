const Markup = require('node-vk-bot-api/lib/markup');
const MenuOption = require('../menu-option');
const coinFinances = require('./../../coin-finances');
const settings = require('./../../config');
const balanceManager = require('./../../balance-manager');
const numberFormatter = require('./../../number-formatter');

class WithdrawCoinOption extends MenuOption {
  async chatMessage(botCtx) {
    const account = await this.ctx.findOrCreateAccount(botCtx);
    const accountBalance = account.coinAmountInCoin();

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ 0
    if (accountBalance === 0) return 'üí∂ –í–∞—à –±–∞–ª–∞–Ω—Å —Ä–∞–≤–µ–Ω 0 VK Coins.';

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ–µ –∫–æ–ª–∏–µ—Å—Ç–≤–æ –¥–µ–Ω–µ–≥ –≤ —Å–∏—Å—Ç–µ–º–µ
    const systemBalance = await balanceManager.getCoinBalance();
    if (systemBalance < account.coinAmount) {
      this.ctx.sendMessageToAdmins(
        `–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ VK Coin –¥–ª—è –≤—ã–≤–æ–¥–∞ ${numberFormatter.formatCoin(accountBalance)}`
      );
      return `
        üí± –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ VK Coin –≤ —Å–∏—Å—Ç–µ–º–µ –¥–ª—è –≤—ã–≤–æ–¥–∞!
        `;
    }

    // –í—Å–µ —Ö–æ—Ä–æ—à–æ
    const feedbackUrl = settings.get('shared.feedback_url');
    const isWithdrawSucceeded = await coinFinances.withdrawCoin(account);
    let message;
    if (isWithdrawSucceeded) {
      message = `
        ‚úî –ú—ã –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ –≤–∞–º ${numberFormatter.formatCoin(accountBalance)} VK Coins!

        üìà –û—Å—Ç–∞–≤—å—Ç–µ —Å–≤–æ–π –æ—Ç–∑—ã–≤: ${feedbackUrl}
        `;
    } else {
      message = `
        ‚ùó –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–≤–æ–¥–µ —Å—Ä–µ–¥—Å—Ç–≤, —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º.
        `;
    }

    return message;
  }

  get buttonMarkup() {
    return Markup.button('üì§ –í—ã–≤–µ—Å—Ç–∏ VK Coin', 'negative', {
      button: this.triggerButton
    });
  }

  get triggerButton() {
    return 'withdraw_coin_button';
  }
}

module.exports = WithdrawCoinOption;
