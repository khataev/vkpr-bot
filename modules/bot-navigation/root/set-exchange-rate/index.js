const Markup = require("node-vk-bot-api/lib/markup");
const MenuOption = require("../../menu-option");
const BackMenuOption = require("./back-menu-option");

class SetExchangeRateOption extends MenuOption {
  async chatMessage(botCtx) {
    return `
    –í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π –∫—É—Ä—Å –≤ —Ñ–æ—Ä–º–∞—Ç–µ XX/YY,
    –≥–¥–µ xx - –∫—É—Ä—Å –ü—Ä–æ–¥–∞–∂–∏, yy - –∫—É—Ä—Å –°–∫—É–ø–∫–∏ (–≤ –∫–æ–ø–µ–π–∫–∞—Ö).
    –ü—Ä–∏–º–µ—Ä: 90/80
    `;
  }

  async beforeReply(botCtx) {
    botCtx.session.chattedContext = {
      chatAllowed: true,
      setExchangeRate: true
    };
  }

  forbiddenTransitionChatMessage(botCtx) {
    return "–î–∞–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º";
  }

  async transitionAllowed(botCtx) {
    return this.ctx.isAdmin(botCtx);
  }

  get buttonMarkup() {
    return Markup.button("üí∏ –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∫—É—Ä—Å –æ–±–º–µ–Ω–∞", "primary", {
      button: this.triggerButton
    });
  }

  menu(botCtx) {
    return [[new BackMenuOption(this.ctx, this)]];
  }

  get triggerButton() {
    return "set_exchange_rate_button";
  }
}

module.exports = SetExchangeRateOption;
